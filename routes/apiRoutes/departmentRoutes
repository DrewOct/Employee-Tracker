const express = require("express");
const inquirer = require("inquirer");
const router = express.Router();
const db = require("../../db/connection");

// View all departments
router.get("/departments", (req, res) => {
  const sql =
    'SELECT departments.id, department_name AS "Department" FROM departments';
  const params = [req.params.id];

  db.query(sql, (err, rows) => {
    if (err) {
      res.status(500).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: rows,
    });

    // const query =
    //   'SELECT department_name, business_home.first_name AS "First Name", business_home.last_name AS "Last Name", role.title AS "Title", departments.department_name AS "Department", role.salary AS "Salary" FROM business_homes INNER JOIN roles ON role.id = business_home.role_id INNER JOIN departments ON department.id = role.department_id WHERE = ?;';
  });
});

// View a single department
router.get("/department/:id", (req, res) => {
  const sql =
    "SELECT employees.* , department.name role.name AS role_name department_name FROM employees LEFT JOIN departments ON employees.department_id = department.id LEFT JOIN roles ON employees.role_id = role.id WHERE employees.id = ?";
  const params = [req.params.id];
  db.query(sql, params, (err, row) => {
    if (err) {
      res.status(400).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: row,
    });
  });
});

// Add a department
router.post("/department", (req, res) => {});

// Delete a department
router.delete("/department/:id", (req, res) => {
  const sql = `DELETE FROM departments WHERE id = ?`;
  const params = [req.params.id];

  db.query(sql, params, (err, result) => {
    if (err) {
      res.status(400).json({ error: res.message });
      // checks if anything was deleted
    } else if (!result.affectedRows) {
      res.json({
        message: "Department not found",
      });
    } else {
      res.json({
        message: "deleted",
        changes: result.affectedRows,
        id: req.params.id,
      });
    }
  });
});

module.exports = router;
