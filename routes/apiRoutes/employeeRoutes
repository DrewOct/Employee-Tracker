const express = require("express");
const router = express.Router();
const db = require("../../db/connection");
const inputCheck = require("../../utils/inputCheck");

// Get all employees
router.get("/employees", (req, res) => {
  // api/api/employees
  const sql = `SELECT employees.*, departments.name
      AS department_name 
      FROM employees 
      LEFT JOIN departments
      ON employees.department_id = departments.id
      LEFT JOIN roles
      ON employees.role_id = roles.id`;

  console.log("test");

  db.query(sql, (err, rows) => {
    if (err) {
      res.status(500).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: rows,
    });
  });
});

// GET a single employee
router.get("/employee/:id", (req, res) => {
  const errors = inputCheck(req.body, "department_id");
  const sql = `SELECT employees.* , department.name, role.name
              AS role_name department_name
              FROM employees 
              LEFT JOIN departments 
              ON employees.department_id = department.id
              LEFT JOIN roles
              ON employees.role_id = role.id
              WHERE employees.id = ?`;

  const params = [req.params.id];

  db.query(sql, params, (err, row) => {
    if (err) {
      res.status(400).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: row,
    });
  });
});

// Create an employee
router.post("/employee", ({ body }, res) => {
  const errors = inputCheck(
    body,
    "first_name",
    "last_name",
    "department_id",
    "role_id",
    "salary_id"
  );
  if (errors) {
    res.status(400).json({ error: errors });
    return;
  }

  const sql = `INSERT INTO employees (first_name, last_name, department_id, role_id, salary_id) VALUES (?,?,?,?,?)`;
  const params = [
    body.first_name,
    body.last_name,
    body.department_id,
    body.role_id,
    body.salary_id,
  ];

  db.query(sql, params, (err, result) => {
    if (err) {
      res.status(400).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: body,
    });
  });
});

// Update an employee's role
router.put("/employee/:id", (req, res) => {
  const errors = inputCheck(req.body, "role_id");

  if (errors) {
    res.status(400).json({ error: errors });
    return;
  }

  const sql = `UPDATE candidates SET role_id = ? 
                   WHERE id = ?`;
  const params = [req.body.party_id, req.params.id];
  db.query(sql, params, (err, result) => {
    if (err) {
      res.status(400).json({ error: err.message });
      // check if a record was found
    } else if (!result.affectedRows) {
      res.json({
        message: "Employee not found",
      });
    } else {
      res.json({
        message: "success",
        data: req.body,
        changes: result.affectedRows,
      });
    }
  });
});

// Delete an employee
router.delete("/employee/:id", (req, res) => {
  const sql = `DELETE FROM employees WHERE id = ?`;
  const params = [req.params.id];

  db.query(sql, params, (err, result) => {
    if (err) {
      res.statusMessage(400).json({ error: res.message });
    } else if (!result.affectedRows) {
      res.json({
        message: "Employee not found",
      });
    } else {
      res.json({
        message: "deleted",
        changes: result.affectedRows,
        id: req.params.id,
      });
    }
  });
});

module.exports = router;
