const { debug } = require("console");
const express = require("express");
const router = express.Router();
const db = require("../../db/connection");

// Get all employees
router.get("/employees", (req, res) => {
  let query = req.query;
  let where = ``;
  // filter by manager
  if (query.manager) {
    where = `WHERE employees.manager_id = ${query.manager}`;
  }
  // filter by department
  if (query.department) {
    where = `WHERE roles.department_id = ${query.department}`;
  }
  // api/api/employees
  const sql = `SELECT employees.*, title AS role_name, department_name AS "Department Name", salary, managers.first_name AS 'Manager First Name'
      FROM employees 
      LEFT JOIN roles
      ON roles.id = role_id
      LEFT JOIN departments
      ON departments.id = department_id
      LEFT JOIN employees managers
      ON managers.id = employees.manager_id
      ${where}
      ORDER by employees.id`;

  db.query(sql, (err, rows) => {
    if (err) {
      res.status(500).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: rows,
    });
  });
});

// GET an employee by manager
router.get("/employees/managers", (req, res) => {
  let query = req.query;
  let where = `WHERE roles.manager = 1`;
  // filter by department
  if (query.department) {
    where += ` AND roles.department_id = ${query.department}`;
  }
  const sql = `SELECT employees.* , department_name AS "Department Name", title
              FROM employees
              LEFT JOIN roles ON employees.role_id = roles.id
              LEFT JOIN departments ON roles.department_id = departments.id ${where}`;

  const params = [req.params.id];

  db.query(sql, params, (err, rows) => {
    if (err) {
      res.status(400).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: rows,
    });
  });
});

// Add an employee
router.post("/employees", (req, res) => {
  // const errors = inputCheck(
  //   body,
  //   "first_name",
  //   "last_name",
  //   "department_id",
  //   "role_id"
  // );
  // if (errors) {
  //   res.status(400).json({ error: errors });
  //   return;
  // }

  const sql = `INSERT INTO employees (first_name, last_name, role_id, manager_id) VALUES (?,?,?,?)`;
  const params = [
    req.body.first_name,
    req.body.last_name,
    req.body.role_id,
    req.body.manager,
  ];

  db.query(sql, params, (err, result) => {
    if (err) {
      res.status(400).json({ error: err.message });
      return;
    }
    res.json({
      message: "success",
      data: req.body,
    });
  });
});

// Update an employee's role
router.put("/employee/:id", (req, res) => {
  const errors = inputCheck(req.body, "role_id");

  if (errors) {
    res.status(400).json({ error: errors });
    return;
  }

  const sql = `UPDATE candidates SET role_id = ? 
                   WHERE id = ?`;
  const params = [req.body.party_id, req.params.id];
  db.query(sql, params, (err, result) => {
    if (err) {
      res.status(400).json({ error: err.message });
      // check if a record was found
    } else if (!result.affectedRows) {
      res.json({
        message: "Employee not found",
      });
    } else {
      res.json({
        message: "success",
        data: req.body,
        changes: result.affectedRows,
      });
    }
  });
});

// Remove an employee
router.delete("/employee/:id", (req, res) => {
  const sql = `DELETE FROM employees WHERE id = ?`;
  const params = [req.params.id];
  console.log("test2");
  db.query(sql, params, (err, result) => {
    if (err) {
      res.status(400).json({ error: res.message });
    } else if (!result.affectedRows) {
      res.json({
        message: "Employee not found",
      });
    } else {
      res.json({
        message: "deleted",
        // changes: result.affectedRows,
        data: req.body.id,
        // id: req.params.id,
      });
    }
  });
});

module.exports = router;
